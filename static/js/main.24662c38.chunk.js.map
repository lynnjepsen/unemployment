{"version":3,"sources":["session-progress/logo/logo.svg","session-progress/logo/index.js","session-progress/index.js","identification/document/checkbox/index.js","identification/document/index.js","identification/license-number-text-field/index.js","identification/first-name-text-field/index.js","identification/last-name-text-field/index.js","identification/address-text-field/index.js","identification/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Logo","react_default","a","createElement","src","logo","className","alt","Component","SessionProgress","src_session_progress_logo","Checkbox","state","checked","indeterminate","_this2","this","dist_default","nativeControlId","props","id","onChange","e","setState","target","Document","identification_document_checkbox","htmlFor","name","LicenseNumberTextField","value","react_text_field_dist_default","outlined","label","helperText","react_text_field_dist","persistent","FirstNameTextField","LastNameTextField","AddressTextField","Identification","src_identification_document","identification_license_number_text_field","identification_first_name_text_field","identification_last_name_text_field","identification_address_text_field","App","src_session_progress","src_identification","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.24662c38.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.66e8af9c.svg\";","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './index.scss';\n\nclass Logo extends Component {\n  render() {\n    return (\n      <img src={logo} className=\"logo\" alt=\"logo\" />\n    );\n  }\n}\n\nexport default Logo;\n","import React, {Component} from 'react';\nimport Logo from './logo';\nimport './index.scss';\n\nclass SessionProgress extends Component {\n  render() {\n    return (\n      <div className=\"session-progress\">\n        <Logo/>\n      </div>\n    );\n  }\n}\n\nexport default SessionProgress;\n","import React, {Component} from 'react';\nimport MaterialCheckbox from '@material/react-checkbox';\nimport './index.scss';\n\nclass Checkbox extends Component {\n  state = {checked: false, indeterminate: false};\n\n  render() {\n    return (\n      <MaterialCheckbox\n        className=\"checkbox\"\n        nativeControlId={this.props.id}\n        checked={this.state.checked}\n        indeterminate={this.state.indeterminate}\n        onChange={(e) => this.setState({\n          checked: e.target.checked,\n          indeterminate: e.target.indeterminate})\n        }\n      />\n    );\n  }\n}\n\nexport default Checkbox;\n","import React, {Component} from 'react';\nimport Checkbox from './checkbox';\nimport './index.scss';\n\nclass Document extends Component {\n  render() {\n    return (\n      <div className=\"document\">\n        <Checkbox id={this.props.id}/>\n        <label htmlFor={this.props.id} className=\"document__name mdc-typography--body2\">{this.props.name}</label>\n      </div>\n    );\n  }\n}\n\nexport default Document;\n","import React, {Component} from 'react';\nimport TextField, {HelperText, Input} from '@material/react-text-field';\nimport './index.scss';\n\nclass LicenseNumberTextField extends Component {\n  state = {value: ''};\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextField\n          className=\"license-number-text-field\"\n          outlined\n          label='License #'\n          helperText={<HelperText persistent>What is your license number?</HelperText>}>\n          <Input\n            value={this.state.value}\n            onChange={(e) => this.setState({value: e.target.value})}/>\n        </TextField>\n      </div>\n    );\n  }\n}\n\nexport default LicenseNumberTextField;\n","import React, {Component} from 'react';\nimport TextField, {HelperText, Input} from '@material/react-text-field';\nimport './index.scss';\n\nclass FirstNameTextField extends Component {\n  state = {value: ''};\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextField\n          className=\"first-name-text-field\"\n          outlined\n          label='First Name'\n          helperText={<HelperText persistent>What is your first name?</HelperText>}>\n          <Input\n            value={this.state.value}\n            onChange={(e) => this.setState({value: e.target.value})}/>\n        </TextField>\n      </div>\n    );\n  }\n}\n\nexport default FirstNameTextField;\n","import React, {Component} from 'react';\nimport TextField, {HelperText, Input} from '@material/react-text-field';\nimport './index.scss';\n\nclass LastNameTextField extends Component {\n  state = {value: ''};\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextField\n          className=\"last-name-text-field\"\n          outlined\n          label='Last Name'\n          helperText={<HelperText persistent>What is your last name?</HelperText>}>\n          <Input\n            value={this.state.value}\n            onChange={(e) => this.setState({value: e.target.value})}/>\n        </TextField>\n      </div>\n    );\n  }\n}\n\nexport default LastNameTextField;\n","import React, {Component} from 'react';\nimport TextField, {HelperText, Input} from '@material/react-text-field';\nimport './index.scss';\n\nclass AddressTextField extends Component {\n  state = {value: ''};\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <TextField\n          className=\"address-text-field\"\n          outlined\n          label='Address'\n          helperText={<HelperText persistent>What is your address?</HelperText>}>\n          <Input\n            value={this.state.value}\n            onChange={(e) => this.setState({value: e.target.value})}/>\n        </TextField>\n      </div>\n    );\n  }\n}\n\nexport default AddressTextField;\n","import React, {Component} from 'react';\nimport Document from './document';\nimport LicenseNumberTextField from './license-number-text-field';\nimport FirstNameTextField from './first-name-text-field';\nimport LastNameTextField from './last-name-text-field';\nimport AddressTextField from './address-text-field';\nimport './index.scss';\n\nclass Identification extends Component {\n  render() {\n    return (\n      <div className=\"identification\">\n        <div className=\"identification__title mdc-typography--headline6\">Identification</div>\n        <div className=\"identification__paragraph mdc-typography--body2\">What identification documents have you brought with you?</div>\n        <div className=\"identification__documents\">\n          <Document name=\"Drivers License\" id=\"drivers-license\"/>\n          <Document name=\"ID card\" id=\"id-card\"/>\n          <Document name=\"Social Security Card\" id=\"social-security-card\"/>\n          <Document name=\"Work Permit\" id=\"work-permit\"/>\n          <Document name=\"Visa\" id=\"visa\"/>\n        </div>\n        <div className=\"identification__document-name  mdc-typography--headline6\">Drivers License</div>\n        <LicenseNumberTextField className=\"identification__license-number\"/>\n        <div className=\"identification__name-form\">\n          <FirstNameTextField className=\"identification__first-name\"/>\n          <LastNameTextField  className=\"identification__last-name\"/>\n        </div>\n        <AddressTextField className=\"identification__address\"/>\n      </div>\n    );\n  }\n}\n\nexport default Identification;\n","import React, {Component} from 'react';\nimport './typography.scss';\nimport SessionProgress from './session-progress';\nimport Identification from './identification';\nimport './App.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <SessionProgress/>\n        <Identification/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}